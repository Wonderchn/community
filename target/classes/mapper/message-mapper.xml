<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hongna.community.dao.MessageMapper">
    <sql id="selectFields">
        id, from_id, to_id, conversation_id, content, status, create_time
    </sql>

    <sql id="insertFields">
        from_id, to_id, conversation_id, content, status, create_time
    </sql>
    <!--    会话列表，提供会话列表的最近一条消息-->
    <select id="selectConversation" resultType="Message">
        -- 查询得到会话列表中一条最近消息
        select
        <include refid="selectFields"></include>
        from message
        where id in (
        select max(id)
        from message
        where status!=2
        and from_id!=1
        and (from_id=#{userId} or to_id=#{userId})
        group by conversation_id
        )
        -- 根据创建时间进行逆序排序
        order by create_time desc
        -- 根据传入对象的offset,和 Limit进行分页
        limit #{offset}, #{limit}
    </select>


    <!--    查询当前用户id所拥有的的会话数量-->
    <select id="selectConversationCount" resultType="int">
        select count(m.maxid)
        from (
            select max(id) as maxid
            from message
            where status!=2
            and from_id!=1
            and (from_id=#{userId} or to_id=#{userId})
            group by conversation_id
        ) as m
    </select>
    <!-- 查询私信列表-->
    <select id="selectLetter" resultType="Message">
        select
        <include refid="selectFields"></include>
        from message
        where status!=2
        and from_id!=1
        and conversation_id=#{conversationId}
        order by create_time desc
        limit #{offset},#{limit}
    </select>
<!-- 查询私信列表中的总列数-->
    <select id="selectLetterCount" resultType="int">
        select count(id)
        from message
        where status!=2
        and from_id!=1
        and conversation_id=#{conversationId}
    </select>
<!--    查询当前用户的会话未读数-->
    <select id="selectLetterUnreadCount" resultType="int">
        select count(id)
        from message
        where status=0
        and from_id!=1
        and to_id=#{userId}
        <if test="conversationId!=null">
            and conversation_id=#{conversationId}
        </if>
    </select>

    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message (<include refid="insertFields"></include>)
        values (#{fromId}, #{toId}, #{conversationId}, #{content}, #{status}, #{createTime})
    </insert>

    <update id="updateStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>
</mapper>